/*определенно нужны препроцессоры, чтобы не генерить весь код стилей в одном файле, неудобно*/
/*очень не хватает css variables, всё харкодом ниже по коду встречается, например цвета и медиавыражения*/
.body {
  /*min-height: 100vh; вместо height: 100%, т.к. у тебя контента может быть больше чем экран пользователя*/
  /*к тому же оно не сработало, можешь убедиться через инспектор*/
  height: 100%;
  background: #e5e5e5;
  font-size: 16px;
  color: #252B42;
  font-weight: 400; /*лишнее*/
  font-family: "Montserrat", sans-serif;
}
/*-------------------------------------------------------------------------*/
.container {
  max-width: 1000px;
  padding: 0 15px;
  margin: 0px auto; /* 0px можно без px */
  /*зачем? он применяется по умолчанию, если хочешь чтобы padding+border не учитывались, то box-sizing: border-box;*/
  box-sizing: content-box;
}
/*-------------------------------------------------------------------------*/
.wrapper {
  /*это свойство не сработало*/
  min-height: 100%;
  /*лишнее*/
  overflow: hidden;
}
/*---------------------------------header----------------------------------------*/
.header {
  padding: 0 20px;
}
.header__title {
  text-align: center;
}
/*--------------------------------calс-----------------------------------------*/
.calc__block {
  display: flex;
}
@media (max-width: 810px) {
  .calc__block {
    flex-direction: column;
  }
}
@media (min-width: 811px) {
  .calc__block-inputs {
    flex: 0 1 50%;
  }

  /*сомнительная идея, если речь идёт о отступами между колонками то решается флексами или гридами через gap*/
  /*альтернативно уж лучше :first-child здесь или .calc__block-inputs + .calc__block-inputs писать*/
  .calc__block-inputs:not(:last-child) {
    margin: 0 30px 0 0;
  }
}
.calc__title {
  font-size: 28px;
  /*это шутка? почему нельзя сделать тоже самое через line-height: 1.5 или комбинацию padding*/
  line-height: 142%;
  margin: 25px 20px;
}
.calc__form-item {
  display: flex;
  align-items: center;
}
/*забудь про комбинацию :not(:last-child)*/
.calc__form-item:not(:last-child) {
  margin: 0 0 10px 0;
}
.calc__input {
  width: 100%;
  flex: 1 1 auto;
  min-height: 50px;
  background: #f9f9f9;
  color: #737373;
  padding: 0 20px;
  border: 1px solid #E6E6E6;
  border-right: 0;
  box-sizing: border-box;
  border-radius: 5px 0 0 5px;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.07);
}
/*при фокусе input черная рамка применяется неравномерно справа*/
.calc__input:focus {
  color: #000;
}
.calc__button {
  background: #FF7B47;
  border: 1px solid #E6E6E6;
  border-radius: 37px;
  /*лишний размер*/
  font-size: 16px;
  display: flex;
  min-height: 50px;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: #ffffff;
  padding: 0 15px;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.07);
}
.calc__button:hover {
  opacity: 0.7;
}
.calc__button:active {
  opacity: 0.7;
  color: #000;
}
.calc__image {
  height: 30px;
  width: 30px;
}
.calc__button-input {
  border-radius: 0px 5px 5px 0px;
}
.calc__form-item-button {
  display: flex;
}
.calc__button-reset {
  border-radius: 37px;
  margin: 0 10px 0 0;
}
/*-------------------------------sum------------------------------------------*/
.sum {
  padding: 30px 0 0 0;
}
.sum__column {
  box-sizing: border-box;
  padding: 0 10px;
/*проще написать flex 1, это делает одинаковые колонки*/
  flex: 0 1 33.333%;
  margin: 0 0 20px 0;
}
.sum__item {
  height: 100%;
  box-shadow: 0 15px 20px rgba(0, 0, 0, 0.07);
  box-sizing: border-box;
  background: #ffffff;
  padding: 20px;
  text-align: center;
}

/*это совсем плохо, * не применяют в css, это антипаттерн*/
/*корректнее было использовать .sum__item {display: grid; gap: 20px}*/
.item-sum > *:not(:last-child) {
  margin: 0 0 20px 0;
}
.sum__image {
  height: 60px;
  
}
.item-sum__title {
  margin: 0;
  font-weight: 700;
  /*откуда такая идея? это был какой-то дизайн?*/
  letter-spacing: 0.1px;
  font-size: 22px;
  /*явно копипаста того что видел ранее*/
  line-height: 142%;
}
@media (max-width: 870px) {
  .sum__column {
    flex: 0 1 50%;
  }
  .sum__column:last-child {
		flex: 1 1 100%;
	}
}
@media (min-width: 600px) {
  .sum__body {
    display: flex;
    flex-wrap: wrap;
    margin: 0 -10px -20px;
  }
}
@media (max-width: 601px) {
  .sum__column {
    padding: 0;
  }
}
/*--------------------------------percent-----------------------------------------*/
.percent__body {
  margin: 30px 0;
}
.percent__block {
  /*а в препроцессорах можно rgba(#000, 0.07);*/
  box-shadow: 0 15px 20px rgba(0, 0, 0, 0.07);
  background: #ffffff;
  padding: 20px;
}
/*за что же ты так любишь этот хак задания отступов между строк*/
.percent__block > *:not(:last-child) {
  margin: 0 0 10px 0;
}
.percent__title {
  margin: 0;
  font-size: 22px;
  line-height: 142%;
}
.percent__input-range {
  width: 100%;
  appearance: none;
}
/*идея понятная, но на выходе может выглядеть лучше в браузере, т.к. этот ползунок в слайдере не центрирован по вертикали*/
/*кроме того, css такая технология, где зачастую не хватает комментариев по реализации, эти две секции - тот самый случай*/
.percent__input-range::-webkit-slider-runnable-track {
  border-radius: 10px/100%;
  height: 7px;
  border: 1px solid #252B42;
  background-color: #FF7B47;
}
.percent__input-range::-webkit-slider-thumb {
  background: #252B42;
  border: 1px solid #252B42;
  border-radius: 10px/100%;
  cursor: pointer;
  width: 15px;
  height: 15px;
  -webkit-appearance: none;
  margin-top: -4px;
}
